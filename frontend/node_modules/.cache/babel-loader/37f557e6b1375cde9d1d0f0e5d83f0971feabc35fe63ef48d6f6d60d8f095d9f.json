{"ast":null,"code":"var _jsxFileName = \"/Users/jiwoon/Documents/SideProject/frontend/src/pages/ViewPostPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Row } from 'react-bootstrap';\nimport Header from '../components/layout/Header';\nimport Footer from '../components/layout/Footer';\n\n// 날짜 포맷팅 함수\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  const hours = String(date.getHours()).padStart(2, '0');\n  const minutes = String(date.getMinutes()).padStart(2, '0');\n  return `${year}.${month}.${day} ${hours}:${minutes}`;\n};\nexport default function ViewPostPage() {\n  _s();\n  const {\n    idAndTitle\n  } = useParams();\n  const postId = idAndTitle.split('-')[0];\n  const [post, setPost] = useState({\n    id: '',\n    title: '',\n    content: '',\n    author: '',\n    likeCount: 0,\n    viewCount: 0,\n    createdAt: ''\n  });\n  useEffect(() => {\n    axios.get(`/post/${postId}`).then(res => setPost(res.data)).catch(error => console.log(error));\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ViewPostPage, \"Ol8ANN4qHY27ASYDmI52/veVCxg=\", false, function () {\n  return [useParams];\n});\n_c = ViewPostPage;\nvar _c;\n$RefreshReg$(_c, \"ViewPostPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","Container","Row","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","formatDate","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","ViewPostPage","_s","idAndTitle","postId","split","post","setPost","id","title","content","author","likeCount","viewCount","createdAt","get","then","res","data","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jiwoon/Documents/SideProject/frontend/src/pages/ViewPostPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport { Container, Row } from 'react-bootstrap'\nimport Header from '../components/layout/Header'\nimport Footer from '../components/layout/Footer'\n\n// 날짜 포맷팅 함수\nconst formatDate = (dateString) => {\n    const date = new Date(dateString)\n    const year = date.getFullYear()\n    const month = String(date.getMonth() + 1).padStart(2, '0')\n    const day = String(date.getDate()).padStart(2, '0')\n    const hours = String(date.getHours()).padStart(2, '0')\n    const minutes = String(date.getMinutes()).padStart(2, '0')\n    \n    return `${year}.${month}.${day} ${hours}:${minutes}`\n}\n\nexport default function ViewPostPage () {\n    const { idAndTitle } = useParams();\n    const postId = idAndTitle.split('-')[0];\n    \n    const [post, setPost] = useState({\n        id: '',\n        title: '',\n        content: '',\n        author: '',\n        likeCount: 0,\n        viewCount: 0,\n        createdAt: '',\n    });\n\n    useEffect(() => {\n        axios.get(`/post/${postId}`)\n            .then(res => setPost(res.data))\n            .catch(error => console.log(error));\n    }, [postId]);\n\n    return (\n        <>\n            <Header/>\n            \n            <Footer/>\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AAChD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,MAAM,MAAM,6BAA6B;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,UAAU,GAAIC,UAAU,IAAK;EAC/B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,MAAMG,IAAI,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC;EAC/B,MAAMC,KAAK,GAAGC,MAAM,CAACL,IAAI,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,MAAMC,GAAG,GAAGH,MAAM,CAACL,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACnD,MAAMG,KAAK,GAAGL,MAAM,CAACL,IAAI,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,MAAMK,OAAO,GAAGP,MAAM,CAACL,IAAI,CAACa,UAAU,CAAC,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAE1D,OAAO,GAAGL,IAAI,IAAIE,KAAK,IAAII,GAAG,IAAIE,KAAK,IAAIE,OAAO,EAAE;AACxD,CAAC;AAED,eAAe,SAASE,YAAYA,CAAA,EAAI;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAW,CAAC,GAAG5B,SAAS,CAAC,CAAC;EAClC,MAAM6B,MAAM,GAAGD,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAEvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjC,QAAQ,CAAC;IAC7BkC,EAAE,EAAE,EAAE;IACNC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE;EACf,CAAC,CAAC;EAEFzC,SAAS,CAAC,MAAM;IACZG,KAAK,CAACuC,GAAG,CAAC,SAASX,MAAM,EAAE,CAAC,CACvBY,IAAI,CAACC,GAAG,IAAIV,OAAO,CAACU,GAAG,CAACC,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,CAAChB,MAAM,CAAC,CAAC;EAEZ,oBACItB,OAAA,CAAAE,SAAA;IAAAuC,QAAA,gBACIzC,OAAA,CAACH,MAAM;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAET7C,OAAA,CAACF,MAAM;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACX,CAAC;AAEX;AAACzB,EAAA,CA3BuBD,YAAY;EAAA,QACT1B,SAAS;AAAA;AAAAqD,EAAA,GADZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}