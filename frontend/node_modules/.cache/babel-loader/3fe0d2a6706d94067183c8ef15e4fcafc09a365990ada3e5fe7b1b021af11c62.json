{"ast":null,"code":"var _jsxFileName = \"/Users/jiwoon/Documents/SideProject/frontend/src/pages/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  const [user, setUser] = useState({\n    userName: '',\n    userEmail: '',\n    password: ''\n  });\n\n  // async는 함수의 앞에 붙여서 해당 함수가 비동기 함수임을 나타내며, await는 비동기 함수의 실행 결과를 기다리는 키워드\n  // ++) async 함수의 리턴값은 Promise 객체 \n  const handleChange = async e => {\n    e.preventDefault();\n    const {\n      id,\n      value\n    } = e.target;\n    setUser({\n      ...user,\n      [id]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:3030/join', user);\n      alert('회원가입이 완료되었습니다!');\n      /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this);\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"userName\",\n        placeholder: \"\\uBCC4\\uBA85\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"userEmail\",\n        placeholder: \"\\uC774\\uBA54\\uC77C\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"wOnqFPqPWlV/11HN/OoF4VIR4b8=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","jsxDEV","_jsxDEV","RegisterPage","_s","user","setUser","userName","userEmail","password","handleChange","e","preventDefault","id","value","target","handleSubmit","post","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","error","children","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/jiwoon/Documents/SideProject/frontend/src/pages/RegisterPage.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nfunction RegisterPage(){\n    const [user, setUser] = useState({\n        userName: '',\n        userEmail: '',\n        password: '',\n    });\n\n    // async는 함수의 앞에 붙여서 해당 함수가 비동기 함수임을 나타내며, await는 비동기 함수의 실행 결과를 기다리는 키워드\n    // ++) async 함수의 리턴값은 Promise 객체 \n    const handleChange = async (e) => {\n        e.preventDefault();\n        const {id, value} = e.target;\n        setUser({...user, [id]: value});\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await axios.post('http://localhost:3030/join', user);\n            alert('회원가입이 완료되었습니다!');\n            <Link to=\"/\" />\n        } catch (error){\n            alert(error);\n        }\n    }\n\n    return (\n        <div>\n            <h3>회원가입</h3>\n            <form onSubmit={handleSubmit}>\n                <input type='text' id='userName' placeholder='별명' onChange={handleChange}/>\n                <input type='password' id='password' placeholder='비밀번호' onChange={handleChange}/>\n                <input type='text' id='userEmail' placeholder='이메일' onChange={handleChange}/>\n                <button type='submit'>회원가입</button>\n            </form>\n        </div>\n    );\n}\n\nexport default RegisterPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC7BS,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE;EACd,CAAC,CAAC;;EAEF;EACA;EACA,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAM;MAACC,EAAE;MAAEC;IAAK,CAAC,GAAGH,CAAC,CAACI,MAAM;IAC5BT,OAAO,CAAC;MAAC,GAAGD,IAAI;MAAE,CAACQ,EAAE,GAAGC;IAAK,CAAC,CAAC;EACnC,CAAC;EAED,MAAME,YAAY,GAAG,MAAOL,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMb,KAAK,CAACkB,IAAI,CAAC,4BAA4B,EAAEZ,IAAI,CAAC;MACpDa,KAAK,CAAC,gBAAgB,CAAC;MACvB,aAAAhB,OAAA,CAACF,IAAI;QAACmB,EAAE,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAC;MACXN,KAAK,CAACM,KAAK,CAAC;IAChB;EACJ,CAAC;EAED,oBACItB,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAI;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbrB,OAAA;MAAMwB,QAAQ,EAAEV,YAAa;MAAAS,QAAA,gBACzBvB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACd,EAAE,EAAC,UAAU;QAACe,WAAW,EAAC,cAAI;QAACC,QAAQ,EAAEnB;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3ErB,OAAA;QAAOyB,IAAI,EAAC,UAAU;QAACd,EAAE,EAAC,UAAU;QAACe,WAAW,EAAC,0BAAM;QAACC,QAAQ,EAAEnB;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjFrB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACd,EAAE,EAAC,WAAW;QAACe,WAAW,EAAC,oBAAK;QAACC,QAAQ,EAAEnB;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7ErB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACnB,EAAA,CArCQD,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAuCrB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}